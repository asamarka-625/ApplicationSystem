"""update enum

Revision ID: b9ac5b230519
Revises: 2f21548949ff
Create Date: 2025-10-10 13:42:53.771946

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b9ac5b230519'
down_revision: Union[str, Sequence[str], None] = '2f21548949ff'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(None, 'request_history', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'requests', 'users', ['creator_id'], ['id'])
    op.create_foreign_key(None, 'requests', 'users', ['assignee_id'], ['id'])
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'EMPLOYEE', 'JUDGE', 'ENGINEER', name='userrole'),
               nullable=False)
    op.create_index(op.f('ix_users_role'), 'users', ['role'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_role'), table_name='users')
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('ADMIN', 'EMPLOYEE', 'JUDGE', 'ENGINEER', name='userrole'),
               nullable=True)
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.drop_constraint(None, 'requests', type_='foreignkey')
    op.drop_constraint(None, 'request_history', type_='foreignkey')
    # ### end Alembic commands ###
